for (i in 1:24) {
x<- runif(data1$w[i],min = data1$time[i],max = data1$end[i])
y <- print(x)
}
y
for (i in 1:24) {
x<- runif(data1$w[i],min = data1$time[i],max = data1$end[i])
y <- print(x[i])
}
set.seed(1234)
for (i in 1:24) {
x<- runif(data1$w[i],min = data1$time[i],max = data1$end[i])
print(x[i])
}
for (i in 1:24) {
x<- runif(data1$w[i],min = data1$time[i],max = data1$end[i])
print(x)
}
for (i in 1:24) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i1],max = data1$end[i+1])
}
for (i in 1:24) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i1],max = data1$end[i+1]))
}
for (i in 1:24) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1]))
}
for (i in 6:24) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1]))
}
for (i in 6) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1]))
}
x
for (i in 8) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1]))
}
x
for (i in 6:23) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1]))
}
x
for (i in 6:23) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1]))
i = i+1
}
x
for (i in 23) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1]))
i = i+1
}
x
for (i in 1:23) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1]))
i = i+1
}
x
for (i in 1:23) {
i = i+1
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1]))
}
for (i in 6:23) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1]))
i = i+1
}
x
for (i in 6:8) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1]))
i = i+1
}
x
for (i in 1:2) {
x<- c(runif(data1$w[i],min = data1$time[i],max = data1$end[i]),
runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1]))
i = i+1
}
x
for (i in 1:2) {
x1 <- runif(data1$w[i],min = data1$time[i],max = data1$end[i])
x2 <- runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1])
x <- rbind(x1,x2)
i = i+1
}
x
for (i in 1:23) {
x1 <- runif(data1$w[i],min = data1$time[i],max = data1$end[i])
x2 <- runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1])
x <- rbind(x1,x2)
i = i+1
}
x
for (i in 1:23) {
x1 <- runif(data1$w[i],min = data1$time[i],max = data1$end[i])
x2 <- runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1])
x  <- c(x1,x2)
i = i+1
}
x
while(i <=23 ){
x1 <- runif(data1$w[i],min = data1$time[i],max = data1$end[i])
x2 <- runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1])
x  <- c(x1,x2)
i = i+1
}
x
while(i <=23 ){
x1 <- runif(data1$w[i],min = data1$time[i],max = data1$end[i])
x2 <- runif(data1$w[i+1],min = data1$time[i+1],max = data1$end[i+1])
i = i+1
x  <- c(x1,x2)
}
x
cond=1
for (i in 2:5){
cond=c(cond,i)
}
cond
cond = 0.0700525
for(i in 1:23){
x1 <- runif(data1$w[i],min = data1$time[i],max = data1$end[i])
cond = c(cond,x1)
}
cond
cond = NULL
for(i in 1:24){
x1 <- runif(data1$w[i],min = data1$time[i],max = data1$end[i])
cond = c(cond,x1)
}
cond
x <- circular(cond, units = "hours", template = "clock24")
plot(x)
View(data1)
runif(100)
View(data1)
library(R.matlab)
data_time <- readMat("C:/Users/HP/Desktop/circular statistics/AESTtimeSzHFOSpike.mat")
library(circular)
data_time$SzT
class(data_time$SzT)
szt_time <- data_time$SzT
szt_circular <- circular(szt_time, units = "hours", template = "clock24")
plot(szt_circular,cex = 1.5,stack = TRUE, sep = 0.035, shrink = 1.3)
szt_circular <- circular(szt_time, units = "hours", template = "clock24")
plot(szt_circular,cex = 1.5,stack = TRUE, sep = 0.035, shrink = 1.3)
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation rotation = "clock", tcl = 0.075)
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
szt_circular
szt_circular <- circular(szt_time, units = "hours")
plot(szt_circular,cex = 1.5,stack = TRUE, sep = 0.035, shrink = 1.3)
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
szt_circular <- circular(szt_time, units = "hours",template = "clock")
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3)
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
szt_circular <- circular(szt_time, units = "hours",template = "clock24")
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3)
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
seq(0,(11/6)*pi,pi/6)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3)
axis.circular(at = circular(seq(0,(8/4)*pi,pi/4)),labels = c("24/0", "3", "6","9","12","15","18","21"))
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
seq(0,(8/4)*pi,pi/4)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3)
axis.circular(at = circular(seq(0,(8/4)*pi,pi/4)),labels = c("0", "3", "6","9","12","15","18","21","24"))
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
szt_circular <- circular(szt_time, units = "hours")
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3)
axis.circular(at = circular(seq(0,(8/4)*pi,pi/4)),labels = c("0", "3", "6","9","12","15","18","21","24"))
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3)
axis.circular(at = circular(seq(0,(8/4)*pi,pi/4)),zero = pi/2,labels = c("0", "3", "6","9","12","15","18","21","24"))
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
szt_circular <- circular(szt_time, units = "hours",zero = pi/2,rotation = "clock")
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3)
axis.circular(at = circular(seq(0,(8/4)*pi,pi/4)),zero = pi/2,labels = c("0", "3", "6","9","12","15","18","21","24"))
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
szt_circular
szt_circular <- circular(szt_time, units = "hours",zero = 0, template = "clock24")
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3)
axis.circular(at = circular(seq(0,(8/4)*pi,pi/4)),zero = pi/2,labels = c("0", "3", "6","9","12","15","18","21","24"))
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3)
axis.circular(at = circular(seq(0,(8/4)*pi,pi/4)),zero = 0,labels = c("0", "3", "6","9","12","15","18","21","24"))
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3)
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
rose.diag(szt_circular, bins = 16, col = "darkgrey", cex = 1.5, prop = 1.3, add = TRUE)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3)
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
rose.diag(szt_circular, bins = 24, cex = 0.75, prop = 0.75, add = TRUE)
rose.diag(szt_circular, bins = 24, col = "darkgrey" cex = 0.75, prop = 1, add = TRUE)
rose.diag(szt_circular, bins = 24, col = "darkgrey", cex = 0.75, prop = 1, add = TRUE)
rose.diag(szt_circular, bins = 24, col = "darkgrey", cex = 0.75, prop = 0.9, add = TRUE)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3)
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
rose.diag(szt_circular, bins = 24, col = "darkgrey", cex = 0.75, prop = 0.9, add = TRUE)
szt_circular <- circular(szt_time, units = "hours",zero = 0, template = "clock24")
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3, col = "dark")
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3, col = "black")
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
rose.diag(szt_circular, bins = 24, col = "darkgrey", cex = 0.75, prop = 0.9, add = TRUE)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3, col = "black")
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
rose.diag(szt_circular, bins = 48, col = "darkgrey", cex = 0.75, prop = 0.9, add = TRUE)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3, col = "black")
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
rose.diag(szt_circular, bins = 48, col = "darkgrey", cex = 1.5, prop = 0.9, add = TRUE)
szt_circular <- circular(szt_time, units = "hours",zero = 0, template = "clock24")
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3, col = "black")
ticks.circular(circular(seq(0,(11/6)*pi,pi/6)),zero = pi/2, rotation = "clock", tcl = 0.075)
library(ggplot2)
seq(0,2pi,24)
seq(0,2*pi,24)
pi/24
pi
seq(0,360,24)
w <- c(1,0,0,0,0,1,1,4,7,7,3,3,5,5,4,5,10,9,2,3,3,1,2,1)
d <- structure(list(Angle =seq(0,360,24), Frequency = w, .Names = c("Angle", "Frequency"
), row.names = c(NA, 36L), class = "data.frame")
d
d <- structure(list(Angle =seq(0,360,24), Frequency = w, .Names = c("Angle", "Frequency"
), class = "data.frame")
)
seq(0,10)
seq(0,(11/6)*pi,pi/6))
seq(0,(11/6)*pi,pi/6)
pi/6
seq(0,(23/12)*pi,pi/12)
360/24
seq(0,360,360/24)
seq(0,345,360/24)
w <- c(1,0,0,0,0,1,1,4,7,7,3,3,5,5,4,5,10,9,2,3,3,1,2,1)
d <- structure(list(Angle =seq(0,345,360/24), Frequency = w, .Names = c("Angle", "Frequency"
), class = "data.frame"))
ggplot(d, aes(x = Angle, y = Frequency)) +
coord_polar(theta = "x", start = -pi/45) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(0, 360, 60))
d <- data.frame(Angle =seq(0,345,360/24), Frequency = w)
View(d)
ggplot(d, aes(x = Angle, y = Frequency)) +
coord_polar(theta = "x", start = -pi/45) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(0, 360, 60))
seq(0, 360, 60)
seq(0, 24, 6)
ggplot(d, aes(x = Angle, y = Frequency)) +
coord_polar(theta = "x", start = -pi/45) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(0, 24, 6))
ggplot(d, aes(x = Angle, y = Frequency)) +
coord_polar(theta = "x", start = -pi/45) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(0, 360, 60))
ggplot(d, aes(x = Angle, y = Frequency)) +
coord_polar(theta = "x", start = -pi/45) +
geom_bar(stat = "identity")
data(cfB11)
data(cfB1)
data(cfB1c)
szt_circular <- circular(szt_time, units = "hours",zero = 0, template = "clock24")
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 0.035, shrink = 1.3, col = "black")
ticks.circular(circular(seq(0,(23/12)*pi,pi/12)),zero = pi/2, rotation = "clock", tcl = 0.075)
mean.circular(szt_circular)
circular(0)
x <- circular(runif(50, circular(0), pi))
mean.circular(x)
x
plot(x)
mean.circular(szt_circular)
rho.circular(szt_circular)
rep(c(11.25, 33.75, 146.25, 303.75, 326.25, 348.75), c(8, 4, 1, 1, 3, 5))
rep(0:23, w)
data("fisherB1")
View(fisherB1)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 16, shrink = 1.2, col = "black")
rose.diag(szt_circular, bins = 24, col = "grey", cex = 1.5, prop = 2.3, add = TRUE)
plot(szt_circular, stack = TRUE, bins = 720, cex = 1.5):
arrows.circular(szt_circular):
arrows.circular(mean(szt_circular), y = rho.circular(szt_circular),lwd = 3)
plot(szt_circular, stack = TRUE, bins = 720, cex = 1.5):
arrows.circular(szt_circular);
arrows.circular(mean(szt_circular), y = rho.circular(szt_circular),lwd = 3)
plot(szt_circular, stack = TRUE, bins = 720, cex = 1.5);
arrows.circular(szt_circular);
arrows.circular(mean(szt_circular), y = rho.circular(szt_circular),lwd = 3)
plot(szt_circular, stack = TRUE, bins = 720, cex = 1.5, col = "black");
arrows.circular(mean(szt_circular), y = rho.circular(szt_circular),lwd = 3)
rose.diag(szt_circular, bins = 24, col = "grey", cex = 1.5, prop = 0.8, add = TRUE)
ggplot(d, aes(x = Angle, y = Frequency)) +
coord_polar(theta = "x", start = -pi/45) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(0, 360, 60))
hfo_time <- data_time$HFOT
hfo_circular <- circular(hfo_time, units = "hours", template = "clock24")
plot(hfo_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 16, shrink = 1.2, col = "grey")
a <- runif(10000,0,24)
a_circular <- circular(a, units = "hours", template = "clock24")
plot(a,cex = 1.5,bin = 720, stack = TRUE, sep = 16, shrink = 1.2, col = "grey")
plot(a_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 16, shrink = 1.2, col = "grey")
plot(a_circular,cex = 1.5,bin = 720, stack = TRUE, sep = 16, shrink = 1.2, col = "grey",pch = 16, next.points = 0.2)
plot(a_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "grey",pch = 16, next.points = 0.2)
plot(a_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "grey",pch = 16, next.points = 0.1)
plot(a_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "grey",pch = 1, next.points = 0.1)
plot(a_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "grey", next.points = 0.1)
points(a_circular, pch=16, col=“darkgrey”, next.points=–0.1,
cex=1.5)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "grey")
points(a_circular, pch=16, col=“darkgrey”, next.points=–0.1,
cex=1.5)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
points(a_circular, pch=16, col="grey", next.points=–0.1,cex=1.5)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
points(a_circular, pch=16, col="grey",cex=1.5)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
points(a_circular, pch=16, col="grey",cex=1.5,next.points = 0.2)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
points(a_circular, pch=16, col="grey",cex=1.5,next.points = 0.1)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
rose.diag(a_circular, bins = 24, col = "grey", cex = 1.5, prop = 0.8, add = TRUE)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
rose.diag(hfo_circular[1:1000], bins = 24, col = "grey", cex = 1.5, prop = 0.8, add = TRUE)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
rose.diag(hfo_circular[1:10000], bins = 24, col = "grey", cex = 1.5, prop = 1, add = TRUE)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
rose.diag(hfo_circular[1:10000], bins = 24, col = "grey", cex = 1.5, prop = 1.3, add = TRUE)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
rose.diag(hfo_circular[1:10000], bins = 24, col = "grey", cex = 1.5, prop = 3.3, add = TRUE)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
rose.diag(szt_circular, bins = 24, col = "grey", cex = 1.5, prop = 3.3, add = TRUE)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
rose.diag(hfo_circular[1:10000], bins = 24, col = "grey", cex = 1.5, prop = 3.3, add = TRUE)
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
arrows.circular(mean(szt_circular), y = rho.circular(szt_circular),lwd = 3);
rose.diag(hfo_circular[1:10000], bins = 24, col = "grey", cex = 1.5, prop = 3.3, add = TRUE);
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
arrows.circular(mean(szt_circular), y = rho.circular(szt_circular),lwd = 3);
rose.diag(hfo_circular[1:10000], bins = 24, cex = 1.5, prop = 3.3, add = TRUE);
plot(szt_circular,cex = 1.5,bin = 720, stack = TRUE, shrink = 1.2, col = "black");
arrows.circular(mean(szt_circular), y = rho.circular(szt_circular),lwd = 3);
rose.diag(hfo_circular[1:10000], bins = 24, cex = 1.5, prop = 3.3, add = TRUE);
arrows.circular(mean(hfo_circular[1:10000]), y = rho.circular(hfo_circular[1:10000]),lwd = 3,col = "red");
setwd("~/")
library("rmarkdown", lib.loc="D:/R/R-3.3.2/library")
remove.packages("rmarkdown")
install.packages("Rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
library(rmarkdown)
install.packages("rmarkdown")
install.packages('Rtools')
install.packages('Rtools')
system('g++ -v')
system('where make')
system('g++ -v')
version
system('where make')
install.packages('stringr')
system('g== -v')
system('g++ -v')
system('where make')
install.packages("installr")
library(installr)
library(installr)
updateR()
library(stringr)
library(ggplot2)
library(stats)
library(PMCMR)
require(nnet)
require(ggplot2)
require(reshape2)
library(MASS)
library(installr)
1.102^10
library(keras)
install.packages("sjPlot")
library(sjPlot)
library(sjPlot)
library(dplyr)
library(splines)
library(mgcv)
library(gnm)
#library(tmap)
library(ggplot2)
# plot the map
library(raster)
library("rgdal")
library("rgeos")
library(tmaptools)
library(sjPlot)
library(sjmisc)
plot_model()
plot_model
plot_type_eff
x <= sample(100)
x <- sample(100)
y <- -40*x+rnorm(100)
lm(y~x)
x <- seq(100,1,-1)
year <- 1900:2000
lm(y ~ year +x)
year <- 1901:2000
lm(y ~ year +x)
x <- seq(100,1,-1)+rnorm(100)
lm(y ~ year +x)
plot(x,y)
plot(lm(y ~ year +x))
library(mytestpackage)
mytestpackage::get_most_recent_date("monday")
hello()
start_time <- Sys.time()
fit_svm <- e1071::svm(PM2.5 ~ province + c_AOD + TEMP + AP + RH + elevation + WS + a_buffer10 + factor(doy),data = train,cross = 0, kernel ='radial')
end_time <- Sys.time()
end_time - start_time
lilibrary(Envirpred)
library(Envirpred)
a <- predictModel()
predictModel(method = "SL.xgboost")
library(maps)
library(rgdal)
library(ggplot2)
library(maptools)
#library(directlabels)
#library(mapproj)
library(plyr)
library(reshape2)
library(Envirpred)
model_details
Envirpred::model_details()
library(devtools)
install_github("Alven8816/sharing-data-DataScientists/blob/pkg/Envirpred_0.1.0.tar.gz")
load("C:/Users/HP/Desktop/Machine Learning/ensemble models draft/mydata2.rda")
levels(mydata2$province)
levels(mydata2$province)[2]
levels(mydata2$province)[3]
levels(mydata2$province)[3]
learner <- tuningModel(basemodel = "SL.ranger", params = list(mtry = c(7)),tune = list(num.trees=c(500)))
predictor <- colnames(mydata2)[-c(3,4,8,9,10,19)]
dependence <- c("PM2.5")
library(Envirpred)
library(caret)
library(dplyr)
learner <- tuningModel(basemodel = "SL.ranger", params = list(mtry = c(7)),tune = list(num.trees=c(500)))
predictor <- colnames(mydata2)[-c(3,4,8,9,10,19)]
dependence <- c("PM2.5")
set.seed(1234)
for (i in levels(mydata2$province)[3]) {
data_province <- filter(mydata2,province == i)
n <- caret:: createDataPartition(data_province$PM2.5,p = 0.7,list = FALSE)
train <- data_province[n,]
test <- data_province[-n,]
#ensemble models
pred_result <- predictModel(Y = train[,dependence],X = train[,predictor],newX = test[,predictor], base_model = c("SL.gbm","SL.ksvm",learner,"SL.xgboost"))
a_pred_result <- assessModel(pred_result, obs = test[,dependence])
a_base <- plot_point(pre = a_pred_result$base_models[,"Base_ensemble"],obs = test[,dependence])
png(filename = paste0("./plot_province/","base_ensemble_",i,".png"))
plot(a_base)
dev.off()
#stack-ensemble model
pred_stack<- stack_ensemble(object = pred_result,meta_model = c(learner,"SL.xgboost","SL.glm"),original_feature = TRUE)
a_stack <- assessModel(pred_stack, obs = test[,dependence])
a_p <- plot_point(pre = a_stack$stack_models[,4],obs = test[,dependence])
print(a_p)
png(filename = paste0("./plot_province/","stack_ensemble_",i,".png"))
plot(a_p)
dev.off()
save(a_stack, file = paste0("./province/","result",i,".rda"))
sink(paste0("./province/","result",i,".txt"))
print(a_stack)
sink()
}
png(filename = paste0("./plot_province/","stack_ensemble_",i,".png"))
plot(a_p)
dev.off()
save(a_stack, file = paste0("./province/","result",i,".rda"))
sink(paste0("./province/","result",i,".txt"))
print(a_stack)
sink()
plot(a_p)
pred_stack<- stack_ensemble(object = pred_result,meta_model = c(learner,"SL.xgboost","SL.glm"),original_feature = TRUE)
a_stack <- assessModel(pred_stack, obs = test[,dependence])
a_p <- plot_point(pre = a_stack$stack_models[,4],obs = test[,dependence])
print(a_p)
remotes::install_github("rstudio/bookdown")
remotes::install_github("ismayc/thesisdown")
library(backports)
remove.packages("backports")
remotes::install_github("ismayc/thesisdown")
remotes::install_github("ismayc/thesisdown")
remotes::install_github("ismayc/thesisdown")
remotes::install_github("ismayc/thesisdown")
install.packages("backports")
remotes::install_github("ismayc/thesisdown")
library(bookdown)
library(thesisdown)
setwd("~/GitHub/academic-kickstart")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()

<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Wenhua(Alven) Yu</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020</copyright><lastBuildDate>Mon, 21 Aug 2017 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Posts</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>Deep Learning &amp; Neural Network free resource(中文)</title>
      <link>/post/deep-learning-neural-network-free-resource-%E4%B8%AD%E6%96%87/</link>
      <pubDate>Mon, 21 Aug 2017 00:00:00 +0000</pubDate>
      <guid>/post/deep-learning-neural-network-free-resource-%E4%B8%AD%E6%96%87/</guid>
      <description>


&lt;p&gt;&lt;a href=&#34;https://ask.hellobi.com/blog/datasharing/9458&#34;&gt;Mang resources&lt;/a&gt; about deep learning.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Natural Language Processing(NLP)(1)——Text segmentation(R vs. python)</title>
      <link>/post/nlp_1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/post/nlp_1/</guid>
      <description>


&lt;div id=&#34;自然语言处理natural-language-processing&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;自然语言处理（Natural Language Processing）&lt;/h2&gt;
&lt;p&gt;自然语言处理（NLP）是机器学习重要分支之一，主要应用于篇章理解、文本摘要、情感分析、知识图谱、文本翻译等领域。而NLP应用首先是对文本进行分词，当前中文分词器有Ansj、paoding、盘古分词等多种，而最基础的分词器应该属于jieba分词器。下面将分别应用R和python对jieba分词器在中文分词、词性标注和关键词提取领域的应用进行比较。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;一jiaba中文分词&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;一、jiaba中文分词&lt;/h2&gt;
&lt;div id=&#34;r实现&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R实现&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;通过函数worker()来初始化分词引擎，使用segment()进行分词。有四种分词模式:最大概率法（MP）、隐马尔科夫模型（HMM）、混合模型（Mix）及索引模型（query）,默认为混合模型。具体可查看help(worker).&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#install.packages(&amp;#39;jiebaR&amp;#39;)
library(jiebaR)
mixseg &amp;lt;- worker()
segment( &amp;quot;这是一段测试文本&amp;quot; , mixseg ) 
#或者用以下操作
mixseg[&amp;#39;这是一段测试文本&amp;#39;]
mixseg &amp;lt;= &amp;quot;这是一段测试文本&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;python实现&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;python实现&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python中需安装jieba库，运用jieba.cut实现分词。cut_all参数为分词类型，默认为精确模式。&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;import jieba
seg_list = jieba.cut(u&amp;quot;这是一段测试文本&amp;quot;,cut_all = False)
print(&amp;quot;Full mode: &amp;quot;+ &amp;quot;,&amp;quot;.join(seg_list))  #默认精确模式&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;无论是R还是python都为utf—8编码。&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;二词性标注&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;二、词性标注&lt;/h2&gt;
&lt;div id=&#34;r实现-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R实现&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;可以使用&amp;lt;=.tagger 或者tag 来进行分词和词性标注，词性标注使用混合模型模型分词，标注采用和 ictclas 兼容的标记法。&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;words = &amp;quot;我爱北京天安门&amp;quot;
tagger = worker(&amp;quot;tag&amp;quot;) #开启词性标注启发器
tagger &amp;lt;= words

    #    r        v       ns       ns 
    # &amp;quot;我&amp;quot;     &amp;quot;爱&amp;quot;   &amp;quot;北京&amp;quot; &amp;quot;天安门&amp;quot; &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;python实现-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;python实现&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;#词性标注
import jieba.posseg as pseg
words = pseg.cut(&amp;quot;我爱北京天安门&amp;quot;)
for word,flag in words:
    print(&amp;#39;%s, %s&amp;#39; %(word,flag))
    
&amp;lt;!-- 我, r --&amp;gt;
&amp;lt;!-- 爱, v --&amp;gt;
&amp;lt;!-- 北京, ns --&amp;gt;
&amp;lt;!-- 天安门, ns --&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;三关键词提取&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;三、关键词提取&lt;/h2&gt;
&lt;div id=&#34;r实现-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R实现&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;R关键词提取使用逆向文件频率（IDF）文本语料库,通过worker参数“keywords”开启关键词提取启发器，topn参数为关键词的个数。&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;keys = worker(&amp;quot;keywords&amp;quot;,topn = 5, idf = IDFPATH)
keys &amp;lt;= &amp;quot;会议邀请到美国密歇根大学(University of Michigan, Ann Arbor）环境健康科学系副教授奚传武博士作题为“Multibarrier approach for safe drinking waterin the US : Why it failed in Flint”的学术讲座，介绍美国密歇根Flint市饮用水污染事故的发生发展和处置等方面内容。讲座后各相关单位同志与奚传武教授就生活饮用水在线监测系统、美国水污染事件的处置方式、生活饮用水老旧管网改造、如何有效减少消毒副产物以及美国涉水产品和二次供水单位的监管模式等问题进行了探讨和交流。本次交流会是我市生活饮用水卫生管理工作洽商机制运行以来的又一次新尝试，也为我市卫生计生综合监督部门探索生活饮用水卫生安全管理模式及突发水污染事件的应对措施开拓了眼界和思路。&amp;quot;

#结果：
#        48.8677        23.4784        22.1402         20.326        18.5354 
#       &amp;quot;饮用水&amp;quot;        &amp;quot;Flint&amp;quot;         &amp;quot;卫生&amp;quot;       &amp;quot;水污染&amp;quot;         &amp;quot;生活&amp;quot; &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;python实现-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;python实现&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python实现关键词提取可运用TF-IDF方法和TextRank方法。allowPOS参数为限定范围词性类型。&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;#关键词提取
import jieba.analyse

content = u&amp;#39;会议邀请到美国密歇根大学(University of Michigan, Ann Arbor）环境健康科学系副教授奚传武博士作题为“Multibarrier approach for safe drinking waterin the US : Why it failed in Flint”的学术讲座，介绍美国密歇根Flint市饮用水污染事故的发生发展和处置等方面内容。讲座后各相关单位同志与奚传武教授就生活饮用水在线监测系统、美国水污染事件的处置方式、生活饮用水老旧管网改造、如何有效减少消毒副产物以及美国涉水产品和二次供水单位的监管模式等问题进行了探讨和交流。本次交流会是我市生活饮用水卫生管理工作洽商机制运行以来的又一次新尝试，也为我市卫生计生综合监督部门探索生活饮用水卫生安全管理模式及突发水污染事件的应对措施开拓了眼界和思路。&amp;#39;

#基于TF-IDF
keywords = jieba.analyse.extract_tags(content,topK = 5,withWeight = True,allowPOS = (&amp;#39;n&amp;#39;,&amp;#39;nr&amp;#39;,&amp;#39;ns&amp;#39;))
for item in keywords:
    print item[0],item[1]
   
#基于TF-IDF结果
# 饮用水 0.448327672795
# Flint 0.219353532163
# 卫生 0.203120821773
# 水污染 0.186477211628
# 生活 0.170049997544&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;#基于TextRank
keywords = jieba.analyse.textrank(content,topK = 5,withWeight = True,allowPOS = (&amp;#39;n&amp;#39;,&amp;#39;nr&amp;#39;,&amp;#39;ns&amp;#39;))
for item in keywords:
    print item[0],item[1]
    
#基于TextRank结果：
# 饮用水 1.0
# 美国 0.570564785973
# 奚传武 0.510738424509
# 单位 0.472841889334
# 讲座 0.443770732053&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;写在文后&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;写在文后&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;自然语言处理（NLP）在数据分析领域有其特殊的应用，在R中除了jiebaR包，中文分词Rwordseg包也非常常用。一般的文本挖掘步骤包括：文本获取（主要用网络爬取）——文本处理（分词、词性标注、删除停用词等）——文本分析（主题模型、情感分析）——分析可视化（词云、知识图谱等）。本文是自然语言处理的第一篇，后续将分别总结下应用深度学习Word2vec进行词嵌入以及主题模型、情感分析的常用NLP方法。&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;参考资料&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Introduction · jiebaR 中文分词&lt;a href=&#34;https://qinwenfeng.com/jiebaR/segment.html&#34; class=&#34;uri&#34;&gt;https://qinwenfeng.com/jiebaR/segment.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;知乎：【文本分析】利用jiebaR进行中文分词&lt;a href=&#34;https://zhuanlan.zhihu.com/p/24882048&#34; class=&#34;uri&#34;&gt;https://zhuanlan.zhihu.com/p/24882048&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;雪晴数据网：全栈数据工程师养成攻略&lt;a href=&#34;http://www.xueqing.tv/course/73&#34; class=&#34;uri&#34;&gt;http://www.xueqing.tv/course/73&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;搜狗实验室，词性标注应用&lt;a href=&#34;http://www.sogou.com/labs/webservice/&#34; class=&#34;uri&#34;&gt;http://www.sogou.com/labs/webservice/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;【R文本挖掘】中文分词Rwordseg &lt;a href=&#34;http://blog.163.com/zzz216@yeah/blog/static/162554684201412895732586/&#34; class=&#34;uri&#34;&gt;http://blog.163.com/zzz216@yeah/blog/static/162554684201412895732586/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
